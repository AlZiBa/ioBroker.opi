{
    "common": {
        "name":                     "opi",
        "title":                    "OPI-Monitor",
        "desc":                     {
			"en": "OPI-Monitor for ioBroker Installations",
			"de": "OPI-Monitor für ioBroker",
			"ru": "OPI-Монитор для ioBroker"
		},
        "version":                  "0.0.1",
        "news": {
            "0.1.0": {
                "en": "initialrelease",
                "de": "erstes Release",
                "ru": ""
            }
        },
        "mode":                     "daemon",
        "platform":                 "javascript/Node.js",
        "os":                       ["linux"],
        "loglevel":                 "info",
        "keywords":                 ["ioBroker", "monitoring", "raspberry", "orangepi", "odroid", "bananapi", "gpio"],
        "main":                     "main.js",
        "authors": [
            "Johann Schneider", "PrinzEisenherz1 <johann.schneider1@googlemail.com>"
        ],
        "license":                  "MIT",
        "singletonHost":             true,
        "readme":                   "https://github.com/PrinzEisenherz1/iobroker.opi/blob/master/README.md",
        "icon":                     "opi.png",
        "type":                     "hardware",
	    "enabled":					true,
        "config":{
            "minWidth":   650,
            "width":      700,
            "minHeight":  600,
            "height":     600
        },
        "extIcon":                  "https://raw.githubusercontent.com/PrinzEisenherz1/iobroker.opi/master/admin/opi.png"
    },
    "native": {
        "c_cpu": true,
        "c_raspberry": false,
        "c_memory": true,
        "c_network": true,
        "c_emmc": true,
        "c_swap": true,
        "c_temperature": true,
        "c_uptime": true,
        "c_wlan": true,
        "interval": 60000,
        "cpu": {
            "cpu_frequency": {
                "command": "cat /sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_cur_freq",
                "regexp": "(.*)",
                "post": "$1/1000"
            },
            "load1,load5,load15": {
                "command": "cat /proc/loadavg",
                "regexp": "^(\\S+)\\s(\\S+)\\s(\\S+)",
                "post": ""
            },
            "scaling_governor": {
                "command": "cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor",
                "regexp": "(.*)",
                "post": ""
            }
        },
        "orangepi": {
            "cpu_voltage": {
                "command": "vcgencmd measure_volts core",
                "regexp": "(\\d+.\\d+)V",
                "post": ""
            },
            "mem_arm": {
                "command": "vcgencmd get_mem arm",
                "regexp": "(\\d+)",
                "post": ""
            },
            "mem_gpu": {
                "command": "vcgencmd get_mem gpu",
                "regexp": "(\\d+)",
                "post": ""
            }
        },
        "memory": {
            "memory_total": {
                "command": "cat /proc/meminfo",
                "regexp": "MemTotal:\\s+(\\d+)",
                "post": "$1/1024"
            },
            "memory_free": {
                "command": "cat /proc/meminfo",
                "regexp": "MemFree:\\s+(\\d+)",
                "post": "$1/1024"
            },
            "memory_available": {
                "command": "/usr/bin/free -mk",
                "regexp": "^-\\/\\+ buffers\\/cache:\\s+\\d+\\s+(\\d+)",
                "post": "$1/1024",
                "multiline": true
            }
        },
        "network": {
            "net_received": {
                "command": "cat /sys/class/net/eth0/statistics/rx_bytes",
                "regexp": "(.*)",
                "post": "$1*-1"
            },
            "net_send": {
                "command": "cat /sys/class/net/eth0/statistics/tx_bytes",
                "regexp": "(.*)",
                "post": ""
            }
        },
        "emmc": {
            "emmc_root_total": {
                "command": "df /",
                "regexp": "\\S+\\s+(\\d+).*\\/$",
                "post": "$1/1024",
                "multiline": true
            },
            "emmc_root_used": {
                "command": "df /",
                "regexp": "\\S+\\s+\\d+\\s+(\\d+).*\\/$",
                "post": "$1/1024",
                "multiline": true
            }
        },
        "swap": {
            "swap_total": {
                "command": "cat /proc/meminfo",
                "regexp": "SwapTotal:\\s+(\\d+)",
                "post": "$1/1024",
                "multiline": true
            },
            "swap_used": {
                "command": "cat /proc/meminfo",
                "regexp": "SwapFree:\\s+(\\d+)",
                "post": "(opi.swap_total - $1)/1024",
                "multiline": true
            }
        },
        "temperature": {
            "soc_temp": {
                "command": "cat /sys/devices/virtual/thermal/thermal_zone0/temp",
                "regexp": "(.*)",
                "post": "$1"
            }
        },
        "uptime": {
            "uptime": {
                "command": "cat /proc/uptime",
                "regexp": "(^\\S+)",
                "post": ""
            }
        },
        "wlan": {
            "wifi_received": {
                "command": "cat /sys/class/net/wlan0/statistics/rx_bytes",
                "regexp": "(.*)",
                "post": "$1*-1"
            },
            "wifi_send": {
                "command": "cat /sys/class/net/wlan0/statistics/tx_bytes",
                "regexp": "(.*)",
                "post": ""
            }
        },
        "gpios": [

        ]
    },
    "objects": [
    ],
    "instanceObjects": [
    ]
}
